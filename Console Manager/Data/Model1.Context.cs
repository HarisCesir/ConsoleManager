//------------------------------------------------------------------------------
// <auto-generated>
//    This code was generated from a template.
//
//    Manual changes to this file may cause unexpected behavior in your application.
//    Manual changes to this file will be overwritten if the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace Console_Manager.Data
{
    using System;
    using System.Data.Entity;
    using System.Data.Entity.Infrastructure;
    using System.Data.Objects;
    using System.Data.Objects.DataClasses;
    using System.Linq;
    
    public partial class ConsoleDatabaseEntities : DbContext
    {
        public ConsoleDatabaseEntities()
            : base("name=ConsoleDatabaseEntities")
        {
        }
    
        protected override void OnModelCreating(DbModelBuilder modelBuilder)
        {
            throw new UnintentionalCodeFirstException();
        }
    
        public DbSet<konzola> konzola { get; set; }
        public DbSet<korisnici> korisnici { get; set; }
        public DbSet<manager> manager { get; set; }
        public DbSet<Cjenovnik> Cjenovnik { get; set; }
        public DbSet<ListaKonzola> ListaKonzola { get; set; }
    
        public virtual int insertkorisnici(string ime, string prezime, string korisnikoime, string lozinkaSalt, string lozinkaHash, Nullable<bool> isAdmin)
        {
            var imeParameter = ime != null ?
                new ObjectParameter("Ime", ime) :
                new ObjectParameter("Ime", typeof(string));
    
            var prezimeParameter = prezime != null ?
                new ObjectParameter("prezime", prezime) :
                new ObjectParameter("prezime", typeof(string));
    
            var korisnikoimeParameter = korisnikoime != null ?
                new ObjectParameter("korisnikoime", korisnikoime) :
                new ObjectParameter("korisnikoime", typeof(string));
    
            var lozinkaSaltParameter = lozinkaSalt != null ?
                new ObjectParameter("lozinkaSalt", lozinkaSalt) :
                new ObjectParameter("lozinkaSalt", typeof(string));
    
            var lozinkaHashParameter = lozinkaHash != null ?
                new ObjectParameter("lozinkaHash", lozinkaHash) :
                new ObjectParameter("lozinkaHash", typeof(string));
    
            var isAdminParameter = isAdmin.HasValue ?
                new ObjectParameter("IsAdmin", isAdmin) :
                new ObjectParameter("IsAdmin", typeof(bool));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("insertkorisnici", imeParameter, prezimeParameter, korisnikoimeParameter, lozinkaSaltParameter, lozinkaHashParameter, isAdminParameter);
        }
    
        public virtual ObjectResult<konzola> konzoleTV1()
        {
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<konzola>("konzoleTV1");
        }
    
        public virtual ObjectResult<konzola> konzoleTV1(MergeOption mergeOption)
        {
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<konzola>("konzoleTV1", mergeOption);
        }
    
        public virtual ObjectResult<korisnici> selectByKorisnickoIme(string korisnickoime)
        {
            var korisnickoimeParameter = korisnickoime != null ?
                new ObjectParameter("Korisnickoime", korisnickoime) :
                new ObjectParameter("Korisnickoime", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<korisnici>("selectByKorisnickoIme", korisnickoimeParameter);
        }
    
        public virtual ObjectResult<korisnici> selectByKorisnickoIme(string korisnickoime, MergeOption mergeOption)
        {
            var korisnickoimeParameter = korisnickoime != null ?
                new ObjectParameter("Korisnickoime", korisnickoime) :
                new ObjectParameter("Korisnickoime", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<korisnici>("selectByKorisnickoIme", mergeOption, korisnickoimeParameter);
        }
    
        public virtual int upaljena(Nullable<int> korisnikID, Nullable<System.DateTime> datum, Nullable<int> konzolaID, string pocetnovrijeme)
        {
            var korisnikIDParameter = korisnikID.HasValue ?
                new ObjectParameter("korisnikID", korisnikID) :
                new ObjectParameter("korisnikID", typeof(int));
    
            var datumParameter = datum.HasValue ?
                new ObjectParameter("datum", datum) :
                new ObjectParameter("datum", typeof(System.DateTime));
    
            var konzolaIDParameter = konzolaID.HasValue ?
                new ObjectParameter("konzolaID", konzolaID) :
                new ObjectParameter("konzolaID", typeof(int));
    
            var pocetnovrijemeParameter = pocetnovrijeme != null ?
                new ObjectParameter("pocetnovrijeme", pocetnovrijeme) :
                new ObjectParameter("pocetnovrijeme", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("upaljena", korisnikIDParameter, datumParameter, konzolaIDParameter, pocetnovrijemeParameter);
        }
    
        public virtual ObjectResult<upapljeno_Result> upapljeno()
        {
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<upapljeno_Result>("upapljeno");
        }
    
        public virtual int updateManager(Nullable<int> managerID, string zavrsetak, string totalTIme, Nullable<decimal> cijena)
        {
            var managerIDParameter = managerID.HasValue ?
                new ObjectParameter("managerID", managerID) :
                new ObjectParameter("managerID", typeof(int));
    
            var zavrsetakParameter = zavrsetak != null ?
                new ObjectParameter("zavrsetak", zavrsetak) :
                new ObjectParameter("zavrsetak", typeof(string));
    
            var totalTImeParameter = totalTIme != null ?
                new ObjectParameter("totalTIme", totalTIme) :
                new ObjectParameter("totalTIme", typeof(string));
    
            var cijenaParameter = cijena.HasValue ?
                new ObjectParameter("cijena", cijena) :
                new ObjectParameter("cijena", typeof(decimal));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("updateManager", managerIDParameter, zavrsetakParameter, totalTImeParameter, cijenaParameter);
        }
    
        public virtual ObjectResult<konzola> SelectAllKonzole()
        {
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<konzola>("SelectAllKonzole");
        }
    
        public virtual ObjectResult<konzola> SelectAllKonzole(MergeOption mergeOption)
        {
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<konzola>("SelectAllKonzole", mergeOption);
        }
    
        public virtual int InsertCjenovnik(string konzola, string vrijemeOD, string vrijemeDO, string cijena)
        {
            var konzolaParameter = konzola != null ?
                new ObjectParameter("Konzola", konzola) :
                new ObjectParameter("Konzola", typeof(string));
    
            var vrijemeODParameter = vrijemeOD != null ?
                new ObjectParameter("VrijemeOD", vrijemeOD) :
                new ObjectParameter("VrijemeOD", typeof(string));
    
            var vrijemeDOParameter = vrijemeDO != null ?
                new ObjectParameter("VrijemeDO", vrijemeDO) :
                new ObjectParameter("VrijemeDO", typeof(string));
    
            var cijenaParameter = cijena != null ?
                new ObjectParameter("Cijena", cijena) :
                new ObjectParameter("Cijena", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("InsertCjenovnik", konzolaParameter, vrijemeODParameter, vrijemeDOParameter, cijenaParameter);
        }
    
        public virtual ObjectResult<Cjenovnik> SELECTCjenovnik()
        {
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<Cjenovnik>("SELECTCjenovnik");
        }
    
        public virtual ObjectResult<Cjenovnik> SELECTCjenovnik(MergeOption mergeOption)
        {
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<Cjenovnik>("SELECTCjenovnik", mergeOption);
        }
    
        public virtual ObjectResult<Cjenovnik> SelectCjenovnikByID(Nullable<int> cjenovnikID)
        {
            var cjenovnikIDParameter = cjenovnikID.HasValue ?
                new ObjectParameter("CjenovnikID", cjenovnikID) :
                new ObjectParameter("CjenovnikID", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<Cjenovnik>("SelectCjenovnikByID", cjenovnikIDParameter);
        }
    
        public virtual ObjectResult<Cjenovnik> SelectCjenovnikByID(Nullable<int> cjenovnikID, MergeOption mergeOption)
        {
            var cjenovnikIDParameter = cjenovnikID.HasValue ?
                new ObjectParameter("CjenovnikID", cjenovnikID) :
                new ObjectParameter("CjenovnikID", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<Cjenovnik>("SelectCjenovnikByID", mergeOption, cjenovnikIDParameter);
        }
    
        public virtual int obrisiCjenovnik(Nullable<int> cjenovnikID)
        {
            var cjenovnikIDParameter = cjenovnikID.HasValue ?
                new ObjectParameter("CjenovnikID", cjenovnikID) :
                new ObjectParameter("CjenovnikID", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("obrisiCjenovnik", cjenovnikIDParameter);
        }
    
        public virtual int UpdataCjenovnik(Nullable<int> cjenovnikID, string cijena)
        {
            var cjenovnikIDParameter = cjenovnikID.HasValue ?
                new ObjectParameter("CjenovnikID", cjenovnikID) :
                new ObjectParameter("CjenovnikID", typeof(int));
    
            var cijenaParameter = cijena != null ?
                new ObjectParameter("Cijena", cijena) :
                new ObjectParameter("Cijena", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("UpdataCjenovnik", cjenovnikIDParameter, cijenaParameter);
        }
    
        public virtual int UgasiSve(Nullable<int> managerID)
        {
            var managerIDParameter = managerID.HasValue ?
                new ObjectParameter("managerID", managerID) :
                new ObjectParameter("managerID", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("UgasiSve", managerIDParameter);
        }
    
        public virtual ObjectResult<CheckStatusKonzole_Result> CheckStatusKonzole(Nullable<int> konzolaID)
        {
            var konzolaIDParameter = konzolaID.HasValue ?
                new ObjectParameter("KonzolaID", konzolaID) :
                new ObjectParameter("KonzolaID", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<CheckStatusKonzole_Result>("CheckStatusKonzole", konzolaIDParameter);
        }
    
        public virtual ObjectResult<konzola> konzoleTV2()
        {
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<konzola>("konzoleTV2");
        }
    
        public virtual ObjectResult<konzola> konzoleTV2(MergeOption mergeOption)
        {
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<konzola>("konzoleTV2", mergeOption);
        }
    
        public virtual ObjectResult<konzola> konzoleTV3()
        {
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<konzola>("konzoleTV3");
        }
    
        public virtual ObjectResult<konzola> konzoleTV3(MergeOption mergeOption)
        {
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<konzola>("konzoleTV3", mergeOption);
        }
    
        public virtual ObjectResult<konzola> konzoleTV4()
        {
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<konzola>("konzoleTV4");
        }
    
        public virtual ObjectResult<konzola> konzoleTV4(MergeOption mergeOption)
        {
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<konzola>("konzoleTV4", mergeOption);
        }
    
        public virtual ObjectResult<konzola> konzoleTV5()
        {
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<konzola>("konzoleTV5");
        }
    
        public virtual ObjectResult<konzola> konzoleTV5(MergeOption mergeOption)
        {
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<konzola>("konzoleTV5", mergeOption);
        }
    
        public virtual int upaljena2(Nullable<int> korisnikID, string datum, Nullable<int> konzolaID, string pocetnovrijeme)
        {
            var korisnikIDParameter = korisnikID.HasValue ?
                new ObjectParameter("korisnikID", korisnikID) :
                new ObjectParameter("korisnikID", typeof(int));
    
            var datumParameter = datum != null ?
                new ObjectParameter("datum", datum) :
                new ObjectParameter("datum", typeof(string));
    
            var konzolaIDParameter = konzolaID.HasValue ?
                new ObjectParameter("konzolaID", konzolaID) :
                new ObjectParameter("konzolaID", typeof(int));
    
            var pocetnovrijemeParameter = pocetnovrijeme != null ?
                new ObjectParameter("pocetnovrijeme", pocetnovrijeme) :
                new ObjectParameter("pocetnovrijeme", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("upaljena2", korisnikIDParameter, datumParameter, konzolaIDParameter, pocetnovrijemeParameter);
        }
    
        public virtual ObjectResult<konzola> konzoleTV10()
        {
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<konzola>("konzoleTV10");
        }
    
        public virtual ObjectResult<konzola> konzoleTV10(MergeOption mergeOption)
        {
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<konzola>("konzoleTV10", mergeOption);
        }
    
        public virtual ObjectResult<konzola> konzoleTV11()
        {
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<konzola>("konzoleTV11");
        }
    
        public virtual ObjectResult<konzola> konzoleTV11(MergeOption mergeOption)
        {
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<konzola>("konzoleTV11", mergeOption);
        }
    
        public virtual ObjectResult<konzola> konzoleTV12()
        {
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<konzola>("konzoleTV12");
        }
    
        public virtual ObjectResult<konzola> konzoleTV12(MergeOption mergeOption)
        {
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<konzola>("konzoleTV12", mergeOption);
        }
    
        public virtual ObjectResult<konzola> konzoleTV6()
        {
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<konzola>("konzoleTV6");
        }
    
        public virtual ObjectResult<konzola> konzoleTV6(MergeOption mergeOption)
        {
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<konzola>("konzoleTV6", mergeOption);
        }
    
        public virtual ObjectResult<konzola> konzoleTV7()
        {
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<konzola>("konzoleTV7");
        }
    
        public virtual ObjectResult<konzola> konzoleTV7(MergeOption mergeOption)
        {
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<konzola>("konzoleTV7", mergeOption);
        }
    
        public virtual ObjectResult<konzola> konzoleTV8()
        {
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<konzola>("konzoleTV8");
        }
    
        public virtual ObjectResult<konzola> konzoleTV8(MergeOption mergeOption)
        {
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<konzola>("konzoleTV8", mergeOption);
        }
    
        public virtual ObjectResult<konzola> konzoleTV9()
        {
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<konzola>("konzoleTV9");
        }
    
        public virtual ObjectResult<konzola> konzoleTV9(MergeOption mergeOption)
        {
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<konzola>("konzoleTV9", mergeOption);
        }
    
        public virtual int DodajKonzolu(string pozicija, string naziv)
        {
            var pozicijaParameter = pozicija != null ?
                new ObjectParameter("Pozicija", pozicija) :
                new ObjectParameter("Pozicija", typeof(string));
    
            var nazivParameter = naziv != null ?
                new ObjectParameter("Naziv", naziv) :
                new ObjectParameter("Naziv", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("DodajKonzolu", pozicijaParameter, nazivParameter);
        }
    
        public virtual ObjectResult<konzola> KonzolaPoTV(string pozicija)
        {
            var pozicijaParameter = pozicija != null ?
                new ObjectParameter("pozicija", pozicija) :
                new ObjectParameter("pozicija", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<konzola>("KonzolaPoTV", pozicijaParameter);
        }
    
        public virtual ObjectResult<konzola> KonzolaPoTV(string pozicija, MergeOption mergeOption)
        {
            var pozicijaParameter = pozicija != null ?
                new ObjectParameter("pozicija", pozicija) :
                new ObjectParameter("pozicija", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<konzola>("KonzolaPoTV", mergeOption, pozicijaParameter);
        }
    
        public virtual int BrisiKonzolu(Nullable<int> konzolaID)
        {
            var konzolaIDParameter = konzolaID.HasValue ?
                new ObjectParameter("KonzolaID", konzolaID) :
                new ObjectParameter("KonzolaID", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("BrisiKonzolu", konzolaIDParameter);
        }
    
        public virtual int InsertKonzole(string naziv)
        {
            var nazivParameter = naziv != null ?
                new ObjectParameter("Naziv", naziv) :
                new ObjectParameter("Naziv", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("InsertKonzole", nazivParameter);
        }
    
        public virtual ObjectResult<ListaKonzola> SveKonzole()
        {
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<ListaKonzola>("SveKonzole");
        }
    
        public virtual ObjectResult<ListaKonzola> SveKonzole(MergeOption mergeOption)
        {
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<ListaKonzola>("SveKonzole", mergeOption);
        }
    
        public virtual ObjectResult<IzvjestajPoDatumu_Result> IzvjestajPoDatumu(Nullable<System.DateTime> datumOD, Nullable<System.DateTime> datumDo)
        {
            var datumODParameter = datumOD.HasValue ?
                new ObjectParameter("DatumOD", datumOD) :
                new ObjectParameter("DatumOD", typeof(System.DateTime));
    
            var datumDoParameter = datumDo.HasValue ?
                new ObjectParameter("DatumDo", datumDo) :
                new ObjectParameter("DatumDo", typeof(System.DateTime));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<IzvjestajPoDatumu_Result>("IzvjestajPoDatumu", datumODParameter, datumDoParameter);
        }
    
        public virtual ObjectResult<TEst_Result> TEst()
        {
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<TEst_Result>("TEst");
        }
    
        public virtual int BrisiListaKonzola(Nullable<int> konzolaID)
        {
            var konzolaIDParameter = konzolaID.HasValue ?
                new ObjectParameter("KonzolaID", konzolaID) :
                new ObjectParameter("KonzolaID", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("BrisiListaKonzola", konzolaIDParameter);
        }
    
        public virtual int CijenCjenovnik(Nullable<System.TimeSpan> vrijemeOD, Nullable<System.TimeSpan> vrijemeDO)
        {
            var vrijemeODParameter = vrijemeOD.HasValue ?
                new ObjectParameter("VrijemeOD", vrijemeOD) :
                new ObjectParameter("VrijemeOD", typeof(System.TimeSpan));
    
            var vrijemeDOParameter = vrijemeDO.HasValue ?
                new ObjectParameter("VrijemeDO", vrijemeDO) :
                new ObjectParameter("VrijemeDO", typeof(System.TimeSpan));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("CijenCjenovnik", vrijemeODParameter, vrijemeDOParameter);
        }
    
        public virtual int DeleteIzvjesta(Nullable<System.DateTime> datumOD, Nullable<System.DateTime> datumDO)
        {
            var datumODParameter = datumOD.HasValue ?
                new ObjectParameter("DatumOD", datumOD) :
                new ObjectParameter("DatumOD", typeof(System.DateTime));
    
            var datumDOParameter = datumDO.HasValue ?
                new ObjectParameter("DatumDO", datumDO) :
                new ObjectParameter("DatumDO", typeof(System.DateTime));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("DeleteIzvjesta", datumODParameter, datumDOParameter);
        }
    
        public virtual int Ugasi()
        {
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("Ugasi");
        }
    }
}
